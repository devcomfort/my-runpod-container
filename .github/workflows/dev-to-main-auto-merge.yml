name: 🚀 Dev to Main Auto-Merge

on:
  workflow_run:
    workflows: ["🐳 Build and Push Multi-Architecture Images", "🧪 Shell Tests"]
    types: [completed]
    branches: [dev]

permissions:
  contents: write
  actions: read

jobs:
  auto-merge-dev-to-main:
    name: 🚀 Auto Merge Dev to Main
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'dev'
    steps:
      - name: Checkout dev branch
        uses: actions/checkout@v4
        with:
          ref: dev
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Check if all required workflows succeeded
        id: check-workflows
        run: |
          echo "🔍 dev 브랜치의 모든 워크플로우 성공 여부 확인..."
          
          # 최신 dev 브랜치 커밋의 SHA 가져오기
          DEV_SHA=$(git rev-parse dev)
          echo "Dev branch SHA: $DEV_SHA"
          
          # 필수 워크플로우들이 모두 성공했는지 확인
          REQUIRED_WORKFLOWS=("🐳 Build and Push Multi-Architecture Images" "🧪 Shell Tests")
          ALL_SUCCESS=true
          
          for workflow in "${REQUIRED_WORKFLOWS[@]}"; do
            echo "🔍 $workflow 상태 확인 중..."
            
            # 해당 워크플로우의 최신 실행 결과 확인
            CONCLUSION=$(gh api repos/${{ github.repository }}/actions/workflows \
              --jq ".workflows[] | select(.name == \"$workflow\") | .id" | \
              xargs -I {} gh api repos/${{ github.repository }}/actions/workflows/{}/runs \
              --jq ".workflow_runs[] | select(.head_sha == \"$DEV_SHA\") | .conclusion" | head -n1)
            
            echo "  - $workflow: $CONCLUSION"
            
            if [[ "$CONCLUSION" != "success" ]]; then
              echo "❌ $workflow가 성공하지 않음: $CONCLUSION"
              ALL_SUCCESS=false
              break
            fi
          done
          
          if [[ "$ALL_SUCCESS" == "true" ]]; then
            echo "✅ 모든 필수 워크플로우가 성공했습니다!"
            echo "should_merge=true" >> $GITHUB_OUTPUT
          else
            echo "❌ 일부 워크플로우가 실패했습니다."
            echo "should_merge=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Direct merge to main
        if: steps.check-workflows.outputs.should_merge == 'true'
        run: |
          echo "🚀 dev → main 직접 머지 시작..."
          
          # Git 사용자 설정
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # main 브랜치로 체크아웃
          git checkout main
          git pull origin main
          
          # dev 브랜치 내용을 main에 머지
          echo "🔄 dev 브랜치를 main에 머지 중..."
          git merge origin/dev --no-ff -m "🤖 Auto-merge dev to main

          ✅ 모든 체크 통과:
          - 🧪 Shell 테스트: 성공
          - 🐳 Docker 빌드: 성공
          
          📋 최신 커밋: $(git log --oneline -1 dev)"
          
          # main 브랜치에 push
          git push origin main
          
          echo "🎉 dev 브랜치가 성공적으로 main으로 머지되었습니다!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Notify merge failure
        if: steps.check-workflows.outputs.should_merge != 'true'
        run: |
          echo "❌ dev → main 자동 머지 실패"
          echo "일부 워크플로우가 실패했거나 완료되지 않았습니다."
          
          echo "🔍 실패 원인을 확인하세요:"
          echo "  - 🐳 Build and Push 워크플로우 상태"
          echo "  - 🧪 Shell Tests 워크플로우 상태"

  # 📊 머지 결과 요약
  merge-summary:
    name: 📊 Dev to Main Merge Summary
    runs-on: ubuntu-latest
    needs: [auto-merge-dev-to-main]
    if: always()
    steps:
      - name: Generate summary
        run: |
          echo "## 🚀 Dev to Main 직접 머지 요약" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.auto-merge-dev-to-main.result }}" == "success" ]]; then
            echo "✅ **직접 머지 성공**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "dev 브랜치의 모든 체크가 통과하여 main 브랜치로 직접 머지되었습니다." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🚀 **장점**: PR 단계 없이 빠른 배포" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.auto-merge-dev-to-main.result }}" == "skipped" ]]; then
            echo "⏭️ **머지 건너뜀**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "워크플로우가 실패했거나 조건을 만족하지 않아 머지가 건너뛰어졌습니다." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **자동 머지 실패**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "자동 머지 중 오류가 발생했습니다." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 자동 머지 조건" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ dev 브랜치에서 실행" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ 🐳 Docker 빌드 및 푸시 성공" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ 🧪 Shell 테스트 통과" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 **No PR**: 직접 main 브랜치에 머지" >> $GITHUB_STEP_SUMMARY 